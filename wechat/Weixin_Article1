#!/usr/bin/env python
# -*- coding:utf-8 -*-
# author:joel
# time:2018/8/31
# 文章链接约12小时失效


import time
import requests
import pymysql
import re


class WeixinUser(object):
    def __init__(self):
        self.url = 'https://weixin.sogou.com/weixin?type=1&s_from=input&query={}&ie=utf8&_sug_=n&_sug_type_='
        self.row_list = []

    @staticmethod
    def tool(text):
        tool = re.compile("<.*?>|&.*?;|\'|\\\\|【|】")
        text = re.sub(tool, "", text)
        return text

    @staticmethod
    def general_tool(text):
        tool1 = re.compile("<.*?>|&.*?;|' '|&nbsp;")
        text = re.sub(tool1, "", text)
        # replace注意要赋给新的对象
        new_text = text.replace("\'", "\'\'")
        new_text2 = new_text.replace("\\", "\\\\")
        return new_text2

    @staticmethod
    def pic_tool(text):
        tool = re.compile("<div.*?>|</div>|&nbsp;|' ")
        text = re.sub(tool, "", text)
        return text

    def getinfo(self, user_id):
        month_art = 0
        cnname, instruction, auth = '', '', ''
        headers = {
            'Cookie': 'SUV=; SUID=; '
                      'SNUID=; '
        }
        s = requests.session()
        r = s.get(self.url.format(user_id), headers=headers)
        # 取openid 以及 中文名称 以及 剩下的可能带有功能介绍、微信认证等信息的部分
        pattern = re.compile('<!-- a -->.*?<li.*?d="oIWsFt(.*?)">.*?uigs='
                             '"account_name.*?" href="(.*?)">(.*?)</a>(.*?)<!-- z -->', re.S)
        result = re.findall(pattern, r.text)
        if result:
            info = result[0]
            openid = info[0]
            # 公众号连接
            user_url = re.sub(r'amp;', '', info[1])
            # 公众号名称
            cnname = self.tool(info[2])
            print(u'该公众号存在!')
            # 月发文
            month = re.findall('var account_anti_url = "(.*?)";', r.text, re.S)
            month_url = 'http://weixin.sogou.com' + month[0]
            r1 = requests.get(month_url)
            # 判断剩下匹配的部分内容中是否还有功能、认证
            gnjs = re.findall('<dt>功能介绍：</dt>\s<dd>(.*?)</dd>', info[3], re.S)
            rz = re.findall('<dt>.*?认证：</dt>\s<dd>(.*?)</dd>', info[3], re.S)
            # 月发文是否存在
            try:
                month_art = r1.json()['msg']['oIWsFt' + openid]
                month_art = str(month_art).split(',')[0]
            except Exception as e:
                print('无月发文...', e)
            # 微信的ID，功能介绍及认证
            if gnjs:
                instruction = self.tool(gnjs[0])
            if rz:
                auth = rz[0]
            print(openid, cnname, user_id, user_url, instruction, auth, month_art)
            # https://mp.weixin.qq.com
            # 可能出现需要验证码，导致无法获取接下来的内容
            r1 = s.get(user_url, headers=headers)
            infos = re.findall(r'"app_msg_ext_info":(.*?)"fakeid"', r1.text, re.S)
            for infox in infos:
                infox_urls = re.findall(r'/s\?(.*?)"', infox, re.S)
                times = re.findall(r'"datetime":(.*?),', infox, re.S)
                for infox_url in infox_urls:
                    info_url = 'https://mp.weixin.qq.com/s?' + infox_url
                    info_url = re.sub(r'amp;', '', info_url)
                    timedate = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime(int(times[0])))
                    print(info_url, timedate)
                    r2 = s.get(info_url, headers=headers)
                    title = re.findall(r'<title>(.*?)</title>', r2.text, re.S)[0]
                    title = self.general_tool(title).strip()
                    if '此内容被投诉且经审核涉嫌侵权' in r2.text:
                        print(u'内容侵权无法查看')
                        continue
                    if '此内容因违规无法查看' in r2.text:
                        print(u'内容违规无法查看')
                        continue
                    content_x = re.findall(r'id="js_content">(.*?)</div>', r2.text, re.S)
                    content = self.general_tool(content_x[0]).strip()
                    if '<div id="img_list" class="share_media">' in content_x[0]:
                        print(u'分享图片')
                        content = self.pic_tool(content_x[0]).strip()
                    # print(cnname, user_id, openid, instruction, auth, month_art, title, info_url, content, timedate)
                    self.updatemysql(cnname, user_id, openid, instruction, auth, month_art, title, info_url, content,
                                      timedate)
        else:
            print(u'无相关订阅号...')

    @staticmethod
    def updatemysql(cnname, wxid, openid, instruction, auth, month_art, title, info_url, content, timedate):
        conn = pymysql.connect(host='localhost', port=3306, user='', passwd='', db='spider')
        cursor = conn.cursor()

        insert_sql = "insert into `weixin` (`name`, `wxid`, `openid`, `description`, `auth`, `month`, " \
                     "`title`, `url`, `content`,`createtime`)values('%s','%s','%s','%s','%s','%s','%s'," \
                     "'%s','%s','%s')" % (cnname, wxid, openid, instruction, auth, month_art, title,
                                          info_url, content, timedate)
        select_sql = "select `title` from `weixin` where `title`='%s'" % title

        update_sql = "update `weixin` set `url`='%s',`content`='%s',`createtime`='%s' where `title`='%s';" % \
                     (info_url, content, timedate, title)

        try:
            response = cursor.execute(select_sql)
            conn.commit()
            if response == 1:
                print(u'该公众号文章存在...')
                try:
                    cursor.execute(update_sql)
                    conn.commit()
                    print(u'公众号文章更新成功...')
                except Exception as e:
                    print(u'公众号文章更新错误...', e)
                    conn.rollback()
            else:
                try:
                    cursor.execute(insert_sql)
                    conn.commit()
                    print(u'公众号文章插入成功...')
                except Exception as e:
                    print(u'公众号文章插入错误...', e)
                    conn.rollback()
        except Exception as e:
            print(u'查询错误...', e)
            conn.rollback()
        finally:
            cursor.close()
            conn.close()


if __name__ == '__main__':
    wxuser = WeixinUser()
    wxuser.getinfo('Rman2010')
